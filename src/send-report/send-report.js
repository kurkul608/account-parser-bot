const AccountModel = require("../models/account.model");
const UserModel = require("../models/user.model");
const moment = require("moment");

const sendReport = async ({ bot, startText, siteName, limit, searchWords }) => {
  const users = await UserModel.find();
  for (const user of users) {
    if (user.sendInfo) {
      let text = startText;

      const accounts = await AccountModel.find({
        siteName,
      })
        .sort({ date: "desc" })
        .limit(limit);

      if (accounts && accounts.length) {
        searchWords.forEach((word) => {
          const filteredSortedData = accounts
            .filter((result) => result.name === word)
            .sort((a, b) => moment(a.date).unix() - moment(b.date).unix());
          if (filteredSortedData.length) {
            text += `\n–ù–∞ ${moment(filteredSortedData[0].date).format(
              "YYYY MM DD HH:mm"
            )}. ‚úÖ \n–ù–∞ –ø–ª–æ—â–∞–¥–∫–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è ${
              filteredSortedData[0].total
            } –∞–∫–∫–∞—É–Ω—Ç–æ–≤ ${
              filteredSortedData[0].name
            }. üë§\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç —Ç–∏–ø–∞ ${
              filteredSortedData[0].name
            } —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${
              filteredSortedData[0].lowestPrice
            } US$D. üí≤\n–ù–∏–∫–Ω–µ–π–º –¥–µ–º–ø–µ—Ä–∞: ${
              filteredSortedData[0].lowestUser.username.split("\n").length > 1
                ? filteredSortedData[0].lowestUser.username.split("\n")[1]
                : filteredSortedData[0].lowestUser.username.split("\n")
            }. üë§\n`;

            if (filteredSortedData[1]) {
              const difference =
                filteredSortedData[1].total - filteredSortedData[0].total;
              text += `–ó–∞ –ø—Ä–æ—à–µ–¥—à–∏–µ 3 —á–∞—Å–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ ${
                difference === 0
                  ? "–Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å"
                  : difference > 0
                  ? `—É–º–µ–Ω—å—à–∏–ª–æ—Å—å –Ω–∞ ${Math.abs(difference)}`
                  : `—É–≤–µ–ª–∏—á–∏–ª–æ—Å—å –Ω–∞ ${Math.abs(difference)}`
              }`;
            }
          }
        });
      } else {
        text += "‚ö†Ô∏è–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ‚ö†Ô∏è";
      }
      await bot.telegram.sendMessage(user.chatId, text);
    }
  }
};

module.exports = { sendReport };
