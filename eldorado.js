const moment = require("moment");
const UserModel = require("./models/user.model");

const data = [];
const requestsEldorado = [
  {
    name: "bronze",
    url: "https://www.eldorado.gg/api/flexibleOffers/?pageSize=24&pageIndex=1&itemTreeId=112-1-0&offerType=Account&searchQuery=bronze&offerSortingCriterion=Price&isAscending=true",
  },
  {
    name: "silver",
    url: "https://www.eldorado.gg/api/flexibleOffers/?pageSize=24&pageIndex=1&itemTreeId=112-1-0&offerType=Account&searchQuery=silver&offerSortingCriterion=Price&isAscending=true",
  },
  {
    name: "gold",
    url: "https://www.eldorado.gg/api/flexibleOffers/?pageSize=24&pageIndex=1&itemTreeId=112-1-0&offerType=Account&searchQuery=gold&offerSortingCriterion=Price&isAscending=true",
  },
  {
    name: "diamond",
    url: "https://www.eldorado.gg/api/flexibleOffers/?pageSize=24&pageIndex=1&itemTreeId=112-1-0&offerType=Account&searchQuery=diamond&offerSortingCriterion=Price&isAscending=true",
  },
  {
    name: "master",
    url: "https://www.eldorado.gg/api/flexibleOffers/?pageSize=24&pageIndex=1&itemTreeId=112-1-0&offerType=Account&searchQuery=master&offerSortingCriterion=Price&isAscending=true",
  },
  {
    name: "grandmaster",
    url: "https://www.eldorado.gg/api/flexibleOffers/?pageSize=24&pageIndex=1&itemTreeId=112-1-0&offerType=Account&searchQuery=grandmaster&offerSortingCriterion=Price&isAscending=true",
  },
  {
    name: "top 500",
    url: "https://www.eldorado.gg/api/flexibleOffers/?pageSize=24&pageIndex=1&itemTreeId=112-1-0&offerType=Account&searchQuery=top%20500&offerSortingCriterion=Price&isAscending=true",
  },
];

const eldoradoFunction = async (bot) => {
  for (const requestData of requestsEldorado) {
    await fetch(requestData.url)
      .then((response) => response.json())
      .then((json) => {
        const results = json.results;
        data.push({
          date: moment(),
          results,
          siteName: "Eldorado",
          name: requestData.name,
          total: json.recordCount,
          lowestPrice: (
            results[0] || {
              offer: {
                pricePerUnit: {
                  amount: 0,
                },
              },
            }
          ).offer.pricePerUnit.amount,
          lowestDescription: (
            results[0] || {
              offer: {
                description: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞",
              },
            }
          ).offer.description,
          lowestTitle: (
            results[0] || {
              offer: {
                offerTitle: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞",
              },
            }
          ).offer.offerTitle,
          lowestUser: (results[0] || { user: undefined }).user,
        });
      });
  }
  const users = await UserModel.find();
  for (const user of users) {
    if (user.sendInfo) {
      await bot.telegram.sendMessage(
        user.chatId,
        "–ê–Ω–∞–ª–∏–∑ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω"
      );
      let text = "‚ùó–î–∞–Ω–Ω—ã–µ –ø–æ Eldorado‚ùó\n";
      const eldoradoData = data.filter(
        (result) => result.siteName === "Eldorado"
      );
      if (eldoradoData.length) {
        requestsEldorado.forEach((req) => {
          const filteredSortedData = eldoradoData
            .filter((result) => result.name === req.name)
            .sort((a, b) => a.date.unix() - b.date.unix());
          if (filteredSortedData.length) {
            text += `\n–ù–∞ ${filteredSortedData[0].date.format(
              "YYYY MM DD hh:mm"
            )}. ‚úÖ \n –ù–∞ –ø–ª–æ—â–∞–¥–∫–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è ${
              filteredSortedData[0].total
            } –∞–∫–∫–∞—É–Ω—Ç–æ–≤ ${
              filteredSortedData[0].name
            }. üë§\n –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç —Ç–∏–ø–∞ ${
              filteredSortedData[0].name
            } —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${filteredSortedData[0].lowestPrice}US$D üí≤\n`;

            if (filteredSortedData[1]) {
              const difference =
                filteredSortedData[1].total - filteredSortedData[0].total;
              text += `–ó–∞ 3 —á–∞—Å–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ ${
                difference === 0
                  ? "–Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å"
                  : difference > 0
                  ? `—É–º–µ–Ω—å—à–∏–ª–æ—Å—å –Ω–∞ ${difference}`
                  : `—É–≤–µ–ª–∏—á–∏–ª–æ—Å—å –Ω–∞ ${difference}`
              }`;
            }
          }
        });
      } else {
        text += "‚ö†Ô∏è–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ‚ö†Ô∏è";
      }
      await bot.telegram.sendMessage(user.chatId, text);
    }
  }
};

module.exports = { eldoradoFunction, requestsEldorado, data };
